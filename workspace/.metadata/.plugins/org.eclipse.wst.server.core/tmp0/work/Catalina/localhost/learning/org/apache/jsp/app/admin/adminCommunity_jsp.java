/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.98
 * Generated at: 2025-02-05 01:59:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.app.admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class adminCommunity_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
 if(session.getAttribute("adminDTO")==null){
	response.sendRedirect(request.getContextPath()+"/app/admin/adminLogin.jsp");
}
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("  <meta charset=\"UTF-8\">\r\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/assets/css/preset/adminPreset.css\">\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/assets/css/admin/adminCommunity.css\">\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/assets/deleteFont/fontello.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<title>커뮤니티 관리</title>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("  <!-- <div class=\"mng-container\"> -->\r\n");
      out.write("\r\n");
      out.write("  ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/app/preset/adminHeader.jsp", out, false);
      out.write("\r\n");
      out.write("  \r\n");
      out.write("  <main class=\"mng-main\">\r\n");
      out.write("    <div class=\"mng-main-container\">\r\n");
      out.write("      <div class=\"mng-main-container-title\">\r\n");
      out.write("        <h1 class=\"mng-main-title\">커뮤니티 관리</h1>\r\n");
      out.write("      </div>\r\n");
      out.write("\r\n");
      out.write("      <div class=\"mng-options-container\">\r\n");
      out.write("        <button id=\"mng-reset-button\">초기화</button>\r\n");
      out.write("        <div class=\"mng-options-search\">\r\n");
      out.write("          <i class=\"icon-search\"></i>\r\n");
      out.write("          <input type=\"text\" name=\"search\" id=\"mng-search\" placeholder=\"내용 검색\">\r\n");
      out.write("          <i class=\"icon-down-dir\">\r\n");
      out.write("            <div class=\"mng-search-dropDown\">\r\n");
      out.write("              <ul class=\"mng-dropDown-text\">\r\n");
      out.write("                <li id=\"mng-text-un\">자유</li>\r\n");
      out.write("                <li id=\"mng-text-br\">공략</li>\r\n");
      out.write("              </ul>\r\n");
      out.write("            </div>\r\n");
      out.write("          </i>\r\n");
      out.write("        </div>\r\n");
      out.write("      </div>\r\n");
      out.write("\r\n");
      out.write("      <div class=\"mng-list-header-container\">\r\n");
      out.write("        <hr class=\"mng-list-line\">\r\n");
      out.write("        <div class=\"mng-list-main\">\r\n");
      out.write("          <div class=\"mng-main-list-check\">\r\n");
      out.write("            <p>선택</p>\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"mng-main-list-writeNum\">\r\n");
      out.write("            <p>게시글 번호</p>\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"mng-main-list-nickName\">\r\n");
      out.write("            <p>닉네임</p>\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"mng-main-list-tier\">\r\n");
      out.write("            <p>티어</p>\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"mng-main-list-category\">\r\n");
      out.write("            <p>카테고리</p>\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"mng-main-list-title\">\r\n");
      out.write("            <p>제목</p>\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"mng-main-list-write-time\">\r\n");
      out.write("            <p>작성 시간</p>\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <hr class=\"mng-list-line\">\r\n");
      out.write("        <ul class=\"mng-list\">\r\n");
      out.write("          <li class=\"mng-list-item\">\r\n");
      out.write("\r\n");
      out.write("        </ul>\r\n");
      out.write("      </div>\r\n");
      out.write("      <div class=\"mng-box-footer\">\r\n");
      out.write("        <button class=\"icon-trash\"></button>\r\n");
      out.write("        <div id=\"mng-totalcount\">총 커뮤니티 게시글 수 : ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${totalCommunityCount}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("개</div>\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    \r\n");
      out.write("    <div class=\"mng-page-number-container\">\r\n");
      out.write("      <div class=\"mng-page-number-button\">\r\n");
      out.write("        <i class=\"icon-angle-double-left\"></i>\r\n");
      out.write("        <i class=\"icon-left-open\"></i>\r\n");
      out.write("        <div class=\"mng-page-numbers\"></div>\r\n");
      out.write("        <i class=\"icon-right-open\"></i>\r\n");
      out.write("        <i class=\"icon-angle-double-right\"></i>\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("  </main>\r\n");
      out.write("  \r\n");
      out.write("  ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/app/preset/footer.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("  <script defer src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/assets/js/admin/adminCommunity.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
